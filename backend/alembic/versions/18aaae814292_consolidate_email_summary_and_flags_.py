"""consolidate_email_summary_and_flags_into_email_table

Revision ID: 18aaae814292
Revises: 2bc8bae6ebf5
Create Date: 2025-05-25 01:02:24.431601

"""
from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "18aaae814292"
down_revision: Union[str, None] = "2bc8bae6ebf5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_email_summaries_id"), table_name="email_summaries")
    op.drop_table("email_summaries")
    op.drop_index(op.f("ix_email_flags_id"), table_name="email_flags")
    op.drop_table("email_flags")
    op.add_column("emails", sa.Column("summary", sa.Text(), nullable=True))
    op.add_column("emails", sa.Column("flags", sa.JSON(), nullable=True))
    op.alter_column(
        "emails",
        "timestamp",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "emails",
        "timestamp",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.drop_column("emails", "flags")
    op.drop_column("emails", "summary")
    op.create_table(
        "email_flags",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("email_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("flag_type", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["email_id"], ["emails.id"], name=op.f("email_flags_email_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("email_flags_pkey")),
    )
    op.create_index(op.f("ix_email_flags_id"), "email_flags", ["id"], unique=False)
    op.create_table(
        "email_summaries",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("email_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("summary", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["email_id"], ["emails.id"], name=op.f("email_summaries_email_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("email_summaries_pkey")),
        sa.UniqueConstraint(
            "email_id",
            name=op.f("email_summaries_email_id_key"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.create_index(
        op.f("ix_email_summaries_id"), "email_summaries", ["id"], unique=False
    )
    # ### end Alembic commands ###
